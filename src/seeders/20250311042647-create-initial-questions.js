"use strict";

/** @type {import('sequelize-cli').Migration} */
module.exports = {
  async up(queryInterface, Sequelize) {
    await queryInterface.bulkInsert("questions", [
      // üîπ 4 c√¢u Alpha
      {
        question_text: "Ng√¥n ng·ªØ l·∫≠p tr√¨nh n√†o ph·ªï bi·∫øn nh·∫•t nƒÉm 2025?",
        question_intro: "Ch·ªçn m·ªôt ng√¥n ng·ªØ l·∫≠p tr√¨nh ƒë∆∞·ª£c s·ª≠ d·ª•ng r·ªông r√£i.",
        question_topic: "L·∫≠p tr√¨nh",
        question_explanation:
          "Theo kh·∫£o s√°t c·ªßa Stack Overflow, ng√¥n ng·ªØ n√†y ƒë∆∞·ª£c s·ª≠ d·ª•ng nhi·ªÅu nh·∫•t.",
        question_type: "Tr·∫Øc Nghi·ªám",
        media_url: JSON.stringify([]), // Kh√¥ng c√≥ media, n√™n l√† m·∫£ng r·ªóng
        correct_answer: "Python",
        options: JSON.stringify([
          { "text": "Python", "media_url": null },
          { "text": "Java", "media_url": null },
          { "text": "C++", "media_url": null },
          { "text": "JavaScript", "media_url": null }
        ]),
        question_order: 1,
        timer: 30,
        time_left: 30,
        dificulty: "Alpha",
        match_id: 1,
        created_at: new Date(),
        updated_at: new Date(),
      },
      {
        question_text: "H·ªá ƒëi·ªÅu h√†nh n√†o ƒë∆∞·ª£c ph√°t tri·ªÉn b·ªüi Microsoft?",
        question_intro: "Ch·ªçn h·ªá ƒëi·ªÅu h√†nh ƒë√∫ng.",
        question_topic: "H·ªá ƒëi·ªÅu h√†nh",
        question_explanation: "Microsoft ph√°t tri·ªÉn h·ªá ƒëi·ªÅu h√†nh ph·ªï bi·∫øn n√†y.",
        question_type: "Tr·∫Øc Nghi·ªám",
        media_url: JSON.stringify([]), // Kh√¥ng c√≥ media, n√™n l√† m·∫£ng r·ªóng
        correct_answer: "Windows",
        options: JSON.stringify([
          { "text": "Windows", "media_url": null },
          { "text": "Linux", "media_url": null },
          { "text": "macOS", "media_url": null },
          { "text": "Ubuntu", "media_url": null }
        ]),
        question_order: 2,
        timer: 30,
        time_left: 30,
        dificulty: "Alpha",
        match_id: 1,
        created_at: new Date(),
        updated_at: new Date(),
      },
      {
        question_text: "H√¨nh ·∫£nh n√†y l√† logo c·ªßa ng√¥n ng·ªØ l·∫≠p tr√¨nh n√†o?",
        question_intro: "Ch·ªçn ng√¥n ng·ªØ l·∫≠p tr√¨nh t∆∞∆°ng ·ª©ng v·ªõi h√¨nh ·∫£nh.",
        question_topic: "L·∫≠p tr√¨nh",
        question_explanation:
          "Logo n√†y thu·ªôc v·ªÅ m·ªôt ng√¥n ng·ªØ l·∫≠p tr√¨nh n·ªïi ti·∫øng.",
        question_type: "H√¨nh ·∫¢nh",
        media_url: JSON.stringify(["/uploads/questions/python_logo.png"]), // S·ª≠a th√†nh m·∫£ng
        correct_answer: "Python",
        options: JSON.stringify([
          { "text": "Python", "media_url": null },
          { "text": "Java", "media_url": null },
          { "text": "C#", "media_url": null },
          { "text": "Ruby", "media_url": null }
        ]),
        question_order: 3,
        timer: 30,
        time_left: 30,
        dificulty: "Alpha",
        match_id: 1,
        created_at: new Date(),
        updated_at: new Date(),
      },
      {
        question_text:
          "Nghe ƒëo·∫°n √¢m thanh v√† cho bi·∫øt ƒë√¢y l√† √¢m thanh c·ªßa h·ªá ƒëi·ªÅu h√†nh n√†o?",
        question_intro: "L·∫Øng nghe v√† ch·ªçn ƒë√°p √°n ch√≠nh x√°c.",
        question_topic: "√Çm thanh",
        question_explanation:
          "√Çm thanh n√†y r·∫•t quen thu·ªôc v·ªõi ng∆∞·ªùi d√πng m√°y t√≠nh.",
        question_type: "√Çm Thanh",
        media_url: JSON.stringify(["/uploads/questions/windows_xp_startup.mp3"]), // S·ª≠a th√†nh m·∫£ng
        correct_answer: "Windows XP",
        options: JSON.stringify([
          { "text": "Windows XP", "media_url": null },
          { "text": "Windows 7", "media_url": null },
          { "text": "macOS", "media_url": null },
          { "text": "Linux", "media_url": null }
        ]),
        question_order: 4,
        timer: 30,
        time_left: 30,
        dificulty: "Alpha",
        match_id: 1,
        created_at: new Date(),
        updated_at: new Date(),
      },

      // üîπ 4 c√¢u Beta
      {
        question_text: "C√¥ng ngh·ªá n√†o sau ƒë√¢y li√™n quan ƒë·∫øn b·∫£o m·∫≠t m·∫°ng?",
        question_intro: "Ch·ªçn c√¥ng ngh·ªá b·∫£o m·∫≠t ph√π h·ª£p.",
        question_topic: "B·∫£o m·∫≠t",
        question_explanation:
          "C√¥ng ngh·ªá n√†y gi√∫p b·∫£o v·ªá d·ªØ li·ªáu tr√™n internet.",
        question_type: "Tr·∫Øc Nghi·ªám",
        media_url: JSON.stringify([]), // Kh√¥ng c√≥ media, n√™n l√† m·∫£ng r·ªóng
        correct_answer: "SSL/TLS",
        options: JSON.stringify([
          { "text": "SSL/TLS", "media_url": null },
          { "text": "Blockchain", "media_url": null },
          { "text": "Wi-Fi", "media_url": null },
          { "text": "AI", "media_url": null }
        ]),
        question_order: 5,
        timer: 30,
        time_left: 30,
        dificulty: "Beta",
        match_id: 1,
        created_at: new Date(),
        updated_at: new Date(),
      },
      {
        question_text: "Ph∆∞∆°ng ph√°p n√†o ƒë∆∞·ª£c d√πng ƒë·ªÉ m√£ h√≥a d·ªØ li·ªáu?",
        question_intro: "Ch·ªçn ph∆∞∆°ng ph√°p m√£ h√≥a ƒë√∫ng.",
        question_topic: "B·∫£o m·∫≠t",
        question_explanation: "Ph∆∞∆°ng ph√°p n√†y gi√∫p d·ªØ li·ªáu an to√†n h∆°n.",
        question_type: "Tr·∫Øc Nghi·ªám",
        media_url: JSON.stringify([]), // Kh√¥ng c√≥ media, n√™n l√† m·∫£ng r·ªóng
        correct_answer: "AES",
        options: JSON.stringify([
          { "text": "AES", "media_url": null },
          { "text": "RSA", "media_url": null },
          { "text": "MD5", "media_url": null },
          { "text": "SHA-256", "media_url": null }
        ]),
        question_order: 6,
        timer: 30,
        time_left: 30,
        dificulty: "Beta",
        match_id: 1,
        created_at: new Date(),
        updated_at: new Date(),
      },
      {
        question_text: "Ph·∫ßn m·ªÅm n√†o l√† m·ªôt tr√¨nh duy·ªát web?",
        question_intro: "Ch·ªçn tr√¨nh duy·ªát web ch√≠nh x√°c.",
        question_topic: "Ph·∫ßn m·ªÅm",
        question_explanation: "Ph·∫ßn m·ªÅm n√†y gi√∫p truy c·∫≠p internet.",
        question_type: "Tr·∫Øc Nghi·ªám",
        media_url: JSON.stringify([]), // Kh√¥ng c√≥ media, n√™n l√† m·∫£ng r·ªóng
        correct_answer: "Google Chrome",
        options: JSON.stringify([
          { "text": "Google Chrome", "media_url": "/uploads/questions/chrome_logo.png" },
          { "text": "Microsoft Word", "media_url": "/uploads/questions/word_logo.png" },
          { "text": "Photoshop", "media_url": "/uploads/questions/photoshop_logo.png" },
          { "text": "Visual Studio Code", "media_url": "/uploads/questions/vscode_logo.png" }
        ]),
        question_order: 7,
        timer: 30,
        time_left: 30,
        dificulty: "Beta",
        match_id: 1,
        created_at: new Date(),
        updated_at: new Date(),
      },
      {
        question_text: "H·ªá th·ªëng qu·∫£n l√Ω c∆° s·ªü d·ªØ li·ªáu n√†o l√† m√£ ngu·ªìn m·ªü?",
        question_intro: "Ch·ªçn h·ªá th·ªëng ph√π h·ª£p.",
        question_topic: "C∆° s·ªü d·ªØ li·ªáu",
        question_explanation: "H·ªá th·ªëng n√†y ƒë∆∞·ª£c s·ª≠ d·ª•ng ph·ªï bi·∫øn tr√™n web.",
        question_type: "Tr·∫Øc Nghi·ªám",
        media_url: JSON.stringify([]), // Kh√¥ng c√≥ media, n√™n l√† m·∫£ng r·ªóng
        correct_answer: "MySQL",
        options: JSON.stringify([
          { "text": "MySQL", "media_url": null },
          { "text": "SQL Server", "media_url": null },
          { "text": "Oracle", "media_url": null },
          { "text": "MongoDB", "media_url": null }
        ]),
        question_order: 8,
        timer: 30,
        time_left: 30,
        dificulty: "Beta",
        match_id: 1,
        created_at: new Date(),
        updated_at: new Date(),
      },

      // üîπ 4 c√¢u RC
      {
        question_text: "Giao th·ª©c n√†o ƒë∆∞·ª£c s·ª≠ d·ª•ng ƒë·ªÉ truy·ªÅn d·ªØ li·ªáu tr√™n web?",
        question_intro: "Ch·ªçn giao th·ª©c ch√≠nh x√°c.",
        question_topic: "M·∫°ng m√°y t√≠nh",
        question_explanation:
          "Giao th·ª©c n√†y gi√∫p truy·ªÅn d·ªØ li·ªáu tr√™n internet.",
        question_type: "Tr·∫Øc Nghi·ªám",
        media_url: JSON.stringify([]), // Kh√¥ng c√≥ media, n√™n l√† m·∫£ng r·ªóng
        correct_answer: "HTTP",
        options: JSON.stringify([
          { "text": "HTTP", "media_url": null },
          { "text": "FTP", "media_url": null },
          { "text": "SMTP", "media_url": null },
          { "text": "SSH", "media_url": null }
        ]),
        question_order: 9,
        timer: 30,
        time_left: 30,
        dificulty: "RC",
        match_id: 1,
        created_at: new Date(),
        updated_at: new Date(),
      },
      {
        question_text: "C√¥ng c·ª• n√†o gi√∫p qu·∫£n l√Ω m√£ ngu·ªìn?",
        question_intro: "Ch·ªçn c√¥ng c·ª• ph√π h·ª£p.",
        question_topic: "L·∫≠p tr√¨nh",
        question_explanation: "C√¥ng c·ª• n√†y gi√∫p qu·∫£n l√Ω v√† theo d√µi thay ƒë·ªïi.",
        question_type: "Tr·∫Øc Nghi·ªám",
        media_url: JSON.stringify([]), // Kh√¥ng c√≥ media, n√™n l√† m·∫£ng r·ªóng
        correct_answer: "Git",
        options: JSON.stringify([
          { "text": "Git", "media_url": null },
          { "text": "Docker", "media_url": null },
          { "text": "Jenkins", "media_url": null },
          { "text": "Kubernetes", "media_url": null }
        ]),
        question_order: 10,
        timer: 30,
        time_left: 30,
        dificulty: "RC",
        match_id: 1,
        created_at: new Date(),
        updated_at: new Date(),
      },
      {
        question_text: "D·ªãch v·ª• n√†o c·ªßa Google cung c·∫•p l∆∞u tr·ªØ ƒë√°m m√¢y?",
        question_intro: "Ch·ªçn d·ªãch v·ª• l∆∞u tr·ªØ ƒë√°m m√¢y ch√≠nh x√°c.",
        question_topic: "ƒêi·ªán to√°n ƒë√°m m√¢y",
        question_explanation:
          "D·ªãch v·ª• n√†y c·ªßa Google gi√∫p l∆∞u tr·ªØ v√† chia s·∫ª d·ªØ li·ªáu tr·ª±c tuy·∫øn.",
        question_type: "Tr·∫Øc Nghi·ªám",
        media_url: JSON.stringify([]), // Kh√¥ng c√≥ media, n√™n l√† m·∫£ng r·ªóng
        correct_answer: "Google Drive",
        options: JSON.stringify([
          { "text": "Google Drive", "media_url": null },
          { "text": "OneDrive", "media_url": null },
          { "text": "Dropbox", "media_url": null },
          { "text": "iCloud", "media_url": null }
        ]),
        question_order: 11,
        timer: 30,
        time_left: 30,
        dificulty: "RC",
        match_id: 1,
        created_at: new Date(),
        updated_at: new Date(),
      },
      {
        question_text: "D·ªãch v·ª• n√†o c·ªßa Google cung c·∫•p l∆∞u tr·ªØ ƒë√°m m√¢y?",
        question_intro: "Ch·ªçn d·ªãch v·ª• l∆∞u tr·ªØ ƒë√°m m√¢y ch√≠nh x√°c.",
        question_topic: "ƒêi·ªán to√°n ƒë√°m m√¢y",
        question_explanation:
          "D·ªãch v·ª• n√†y c·ªßa Google gi√∫p l∆∞u tr·ªØ v√† chia s·∫ª d·ªØ li·ªáu tr·ª±c tuy·∫øn.",
        question_type: "Tr·∫Øc Nghi·ªám",
        media_url: JSON.stringify([]), // Kh√¥ng c√≥ media, n√™n l√† m·∫£ng r·ªóng
        correct_answer: "Google Drive",
        options: JSON.stringify([
          { "text": "Google Drive", "media_url": null },
          { "text": "OneDrive", "media_url": null },
          { "text": "Dropbox", "media_url": null },
          { "text": "iCloud", "media_url": null }
        ]),
        question_order: 12,
        timer: 30,
        time_left: 30,
        dificulty: "RC",
        match_id: 1,
        created_at: new Date(),
        updated_at: new Date(),
      },

      // üîπ 1 c√¢u Gold
      {
        question_text:
          "C√¥ng ngh·ªá n√†o sau ƒë√¢y ƒë∆∞·ª£c s·ª≠ d·ª•ng trong tr√≠ tu·ªá nh√¢n t·∫°o?",
        question_intro: "Ch·ªçn c√¥ng ngh·ªá AI ch√≠nh x√°c.",
        question_topic: "AI",
        question_explanation: "C√¥ng ngh·ªá n√†y gi√∫p m√°y t√≠nh h·ªçc h·ªèi t·ª´ d·ªØ li·ªáu.",
        question_type: "Tr·∫Øc Nghi·ªám",
        media_url: JSON.stringify([]), // Kh√¥ng c√≥ media, n√™n l√† m·∫£ng r·ªóng
        correct_answer: "Machine Learning",
        options: JSON.stringify([
          { "text": "Machine Learning", "media_url": null },
          { "text": "Cloud Computing", "media_url": null },
          { "text": "5G", "media_url": null },
          { "text": "Blockchain", "media_url": null }
        ]),
        question_order: 13,
        timer: 30,
        time_left: 30,
        dificulty: "Gold",
        match_id: 1,
        created_at: new Date(),
        updated_at: new Date(),
      },
    ]);
  },

  async down(queryInterface, Sequelize) {
    await queryInterface.bulkDelete("questions", null, {});
  },
};